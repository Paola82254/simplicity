@import url('https://fonts.googleapis.com/css2?family=Noto+Sans&family=Raleway:wght@700;800&display=swap');

*{box-sizing: border-box;}

:root {
    /* vari√°veis para a paleta de cores do site */
    --cor-titulo: #4d4d4d;
    --cor-texto: #333;
    --cor-escura: #000;
    --cor-clara: #fff;
    --cor-intermediaria: #ececec;
}
html{font-size: 16px;}
body{
    color:var(--cor-texto);
    font-family: 'Noto Sans', sans-serif;
    background-color: var(--cor-clara );
}
body, h1, h2, p, figure, .menu {
    margin: 0;
    padding: 0;
}
img {max-width: 100%;}

h1 { font-family: Raleway, sans-serif;
     text-transform:uppercase;
     font-weight: 800;
     font-size: 1.5rem;
}

h1 a {
    color: var(--cor-clara);
    background-color: var(--cor-escura);
    padding: 0.3rem 1rem;
    border-radius:4px;
}

a {text-decoration: none;}

header .limitador {
    display:flex;
    align-items: center;
    justify-content:space-between;
    height: 15vh;

}

header {
    position: sticky;
    top: 0;
    /* z-index com valor alto garante que o cabe√ßalho passar√° por cimade todos os conte√∫dos da p√°gina e nenhum deles sobreponha o cabe√ßalho */
    z-index: 100;
    background-color: var(--cor-clara)
}

/* Formata√ß√£o da Palavra Menu */

nav h2 a {
    color: var(--cor-escura);
    font-size: 1.2rem;
    padding: 1rem;
    display: inline-block;
}

nav h2 a:hover, nav h2 a:focus
.menu a:hover , .menu a:focus
{
    background-color: var(--cor-intermediaria);
}

.menu {list-style: none;}

/* regra para formatar os links contidos na lista/menu */
  /* Fa√ßa as seguintes altera√ß√µes  
-cor do texto escura
-negrito
-flex com centraliza√ß√£o total
-altura de 50px
*/

/* regra da lista ul de links */
.menu{
    list-style:none;
/* ATEN√á√ÉO! Usamos o display none para n√£o exibir inicialmente a lista de links. */
display: none;

}
.menu a {
font-style:var(--cor-escura);
display: flex;
justify-content: center;
align-items: center;
font-weight: bold;
height: 50px;
/* background-color: yellowgreen;
border: solid 1px; */
}
/* Seletor de Classes combinadas
Esta regra somente ir√° funcionar quando AS DUAS CLASSES estiverem aplicadas JUNTAS no elemento HTML (no caso, na lista de (menu/links). 
OBS: Esta combina√ß√£o ser√° poss√≠vel por meio de manipula√ß√£o programada com JavaScript*/
.menu.aberto {
    /* O Flex far√° a lista de links aparecer*/
    display: flex;
    /*  O Flex far√° a lista de links aparecer em forma de coluna (vertical)*/
    flex-direction: column;
/* Usamos as propriedades de posicionamento e coordenadas para garantir o encaixe correto (abaixo do t√≠tulo e da palavra Menu). */
    position: absolute;
    left:0;
    right: 0;
/* Aplicamos um fundo √† lista evitando a dificuldade de leirura dos links */
    background-color: var(--cor-clara);
}



    /* 1) Crie uma regra CSS para formatar o artigo/se√ß√£o de Destaque com as seguintes configura√ß√µes: 

Altura de uns 500px
	
Imagem de fundo (fundo-destaque)
	
Imagem de fundo deve ficar parada
	
Flex com alinhamento totalmente centralizado, e um elemento em cima do outro (ou seja, em modo coluna)



2) Crie uma regra CSS para formatar o h2 e o p contidos em Destaque. Fa√ßa com que os textos fiquem centralizados e com a cor clara 

*/

.destaque {
    height: 85vh;
    background-image:url(../imagens/fundo-destaque.jpg);
    background-attachment: fixed;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
}

.destaque h2,.destaque p{
    color: var(--cor-clara);
    text-align: center;
    animation-name: animaDestaque;
    animation-duration: 3s;
    animation-timing-function: ease-out
;

}
.destaque h2 {
    /* Fun√ß√£o clamp(
        tamanho m√≠nimo
        tamanho ideal
        tamanho m√°ximo
    ) */
    font-size: clamp(3rem, 10vw, 7rem);
}

.destaque p {
    font-size: clamp(1.5rem, 3vw, 3rem);
}
/* Regra de Anima√ß√£o */
@keyframes animaDestaque {
    from { opacity: 0;
    transform: translateY(-500px); }
    to { opacity: 1; }

}

article h2 {
    padding: 1rem;
    font-size: 2rem;
    font-family: Raleway, sans-serif;
    color: var(--cor-titulo);
}

.front-end, .historia, .localizacao {
    text-align: center;
}

article p{
    padding: 0.5rem 0;
    font-size: 1.2rem
}

abbr {
    text-decoration: none;
    background-color: var(--cor-escura);
    color: var(--cor-clara);
    padding: 0 2px;
    border-radius: 4px;
}
address {font-style: normal;}

/* 1) Crie uma regra para formatar o artigo de Hist√≥ria da Internet com: 
- Plano de fundo: imagem "fundo-madeira"
- Deixe a imagem parada e cobrindo todo o espa√ßo do artigo*/

 .historia {
    background-image: url(../imagens/fundo-madeira.jpg);
    background-attachment: fixed;
    height: 100%;
    width: 100%;
 }

/* 2) Crie uma regra para formatar o titulo "Hist√≥ria da Internet" com cor clara e uma sombra no texto. */
.historia h2 {
    color: var(--cor-clara);
    text-shadow: var(--cor-escura) 0px 0px 10px;
}
 

/* 3) Crie uma regra para formatar o v√≠deo do artigo Hist√≥ria da Internet com:
- Largura de 100%
- Largura m√°xima de 700px
- Margem inferior de 2rem */
.historia iframe{
    width: 100%;
    max-width: 700px;
    margin-bottom: 2rem ;
}
 

/* 4) Crie uma regra para formatar o mapa da Localiza√ß√£o com:
- Largura de 100%
- Margem superior de 2rem */
.localizacao iframe{
    width: 100%;
    margin-top: 2rem;
}

 

/* 5) Crie uma classe chamada "limitador" com largura de 95vw e margem autom√°tica. 
Aplique esta classe no cabe√ßalho e no artigo front-end. */
.limitador { 
    width: 95vw;
    margin: auto;
}
 

/* 6) Crie uma regra para o rodap√© com:
- Fundo escuro
- Cor do texto clara
- Altura de 30vh
- Negrito
- Flex com centraliza√ß√£o total
- Texto centralizado */

footer {
    background-color: var(--cor-escura);
    color: var(--cor-clara);
    height: 30vh;
    font-weight: bold;
    display: flex;
    justify-content: center;
    align-items: center;
}

/* Regras para as p√°ginas Produtos, Servi√ßos e Contato */
.conteudo {
    background-color: var(--cor-intermediaria);
    padding: 0.5rem;
    border-radius: 8px;
}

.conteudo h2 {
    padding-left: 0;
    font-size: 1.8rem;
    border-bottom: solid 1px;
    margin-bottom: 1rem;
}

table {
    width: 80%;
    margin: auto;
}

table, th, td{
 border: solid 1px;
 border-collapse: collapse;
}

caption {
    text-transform: uppercase;
    font-weight: bold;
    font-size: 1.1rem;
    padding-bottom: 0.5rem;
}

th{
    background-color: var(--cor-escura);
    color: var(--cor-clara);
    border-color: var(--cor-escura);
    padding: 0.7rem;
}

td {
    padding: 0.5rem;
}

td:nth-child(2) {text-align: center;}
th:last-child, td:last-child{
    text-align: right;
}

th:first-child {text-align: left;}
tr:nth-child(odd) {
    background-color: var(--cor-clara);
}

/* Regras para formul√°rio */
form {
    max-width: 500px;
    margin: auto;
}

input, select, textarea {
    border: none;
    padding: 4px;
    height: 40px;
    border-radius: 4px;
}

textarea {
    height: auto;
}

form div {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 1rem;
}

label {
    font-size: 0.9rem;
    font-weight: bold;
    width: 20%;
}

/* Pseudo-classe :not() 
Permite criar exce√ß√µes para uma regra.
Neste exempo, estamos aplicando 70% de largura para tudo (*), dentro do "form div" EXCETO o "label". */
form div *:not(label) {
    width: 70%;
}

button {
    background-color: var(--cor-escura);
    color: var(--cor-clara);
    border: none;
    font-weight: bold;
    padding: 1rem 0.5rem;
    cursor: pointer;
    border-radius: 4px;
}

button:hover, button:focus {
    background-color: var(--cor-clara);
    color: var(--cor-escura);
    box-shadow: var(--cor-escura) 0 0 2px;
}

/* 1) Crie uma regra condicional para telas a partir de 570px com as seguintes altera√ß√µes:

 

- Esconder a palavra Menu
- Habilitar o flex para a classe "menu"
- Definir largura de 100% para os itens dentro do "menu"
- Definir largura de 70% para o nav
- Reduzir para 200px a altura da imagem contida no artigo Front-End */

@media screen and (min-width:570px){
    nav h2 {display: none;}
    .menu {display: flex;
    justify-content: space-around;}
    .menu li {width: 100%;}
    nav {width: 70%;}
    .front-end img{ height: 150px;}
}

 /* pseudo-elemento ::before (::after) */
td:last-child {position: relative;}
td:last-child::before {
    content: "R$";
    position: absolute;
    left: 10px;
}

.conteudo h2::before {content:"üéÅ"}

 

/* 2) Crie uma regra condicional para telas a partir de 900px com  as seguintes altera√ß√µes:



- Aumentar o tamanho geral de todos os textos para 18px 
- Definir o tamanho m√°ximo da classe limitador para 1000px */

@media screen and (min-width:900px){
    .limitador {max-width: 1000px;}

}  

html {
    font-size: 18px;
}

.imagensdeservico{
    display: flex;
    justify-content: space-evenly;
}

.imagensdeservico img {
    border-radius: 100%;
    transform: scale(0.9);
    transition: 500ms;
    filter: blur(0.9px) brightness(89%);
}

/* Aplicamos o :hover o o :focus no seletor de tag "a", ao inv√©s de aplicar no "img". Desta forma, o acionamento funcionar√° tanto com o mouse quando com o teclado */
.imagensdeservico a:hover img, .imagensdeservico a:focus img{
    transform: scale(1);
    border-radius: 10%;
    filter: blur(0);
}

@media screen and (min-width:100px){
    .imagensdeservico{
    display: flex;
    flex-wrap: wrap;
    }
}
